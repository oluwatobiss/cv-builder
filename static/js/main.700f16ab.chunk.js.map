{"version":3,"sources":["components/AboutApp.js","components/Avatar.js","components/ElementMaker.js","components/NameAndJobTitle.js","components/ID.js","components/Profile.js","components/Achievement.js","components/ExperienceInfo.js","components/Experience.js","components/EducationInfo.js","components/Education.js","components/Email.js","components/Address.js","components/Phone.js","components/UntitledContact.js","components/Contact.js","components/HoverRating.js","components/SkillInfo.js","components/Skills.js","components/LanguageInfo.js","components/Languages.js","components/CVPage.js","components/OffPageButtons.js","components/App.js","index.js"],"names":["AboutApp","id","href","rel","target","Avatar","avatarInputEleRef","React","createRef","useState","faker","image","avatar","setAvatar","type","accept","onChange","e","files","split","URL","createObjectURL","alert","ref","src","alt","onDoubleClick","current","click","onLoad","revokeObjectURL","ElementMaker","props","MutableTagType","mutableTagType","StaticTagType","staticTagType","showInputEle","placeholder","className","name","value","text","handleEleChange","onBlur","handleEleBlur","autoFocus","handleEleDoubleClick","NameAndJobTitle","firstName","lastName","fullName","setFullName","jobTitle","setJobTitle","ID","Profile","lorem","sentences","profile","setProfile","Achievement","sentence","myAchievement","setMyAchievement","ExperienceInfo","jobType","specialty","setSpecialty","company","companyName","myCompanyName","setMyCompanyName","address","city","myCompanyCity","setMyCompanyCity","startYear","setStartYear","endYear","setEndYear","uniqid","myAchievements","setMyAchievements","handleNumEleChange","Number","console","error","onClick","Experience","experienceInfoArray","setExperienceInfoArray","Education","mySchoolName","setMySchoolName","mySchoolCity","setMySchoolCity","EducationInfo","educationInfoArray","setEducationInfoArray","Email","internet","email","myContactEmail","setMyContactEmail","Address","streetName","myContactStreetName","setMyContactStreetName","cityName","myContactCityName","setMyContactCityName","zipCode","myContactZipCode","setMyContactZipCode","country","myContactCountry","setMyContactCountry","Phone","phone","phoneNumber","myContactTel","setMyContactTel","UntitledContact","subHeader","setSubHeader","myCustomContactText","setMyCustomContactText","Contact","myContacts","setMyContacts","labels","0.5","1","1.5","2","2.5","3","3.5","4","4.5","5","useStyles","makeStyles","root","width","display","alignItems","StyledRating","withStyles","iconFilled","color","Rating","HoverRating","defaultRating","setValue","hover","setHover","classes","handleRateDoubleClick","handleRateBlur","precision","icon","event","newValue","onChangeActive","newHover","readOnly","Box","ml","SkillInfo","mySkill","setMySkill","hoverName","Skills","mySkills","setMySkills","LanguageInfo","myLanguage","setMyLanguage","Languages","myLanguages","setMyLanguages","CVPage","OffPageButtons","window","print","action","method","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.700f16ab.chunk.js","sourcesContent":["function AboutApp() {\r\n    return (\r\n        <div id=\"about-app-div\">\r\n            <h1>CV Builder</h1>\r\n            <a href=\"https://www.codesweetly.com/\" rel=\"noreferrer\" target=\"_blank\">Created by Oluwatobi Sofela</a>\r\n            <p>Double-click Text or Image to Edit ▶</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AboutApp;","import React, { useState } from \"react\";\r\nimport faker from \"faker\";\r\n\r\nfunction Avatar() {\r\n    const avatarInputEleRef = React.createRef();\r\n    const [avatar, setAvatar] = useState(faker.image.avatar());\r\n\r\n    const handleLoad = e => URL.revokeObjectURL(e.target.src);\r\n    const handleDoubleClick = () => avatarInputEleRef.current.click();\r\n    const handleChange = e => {\r\n        e.target.files[0].type.split(\"/\")[0] === \"image\" ?\r\n        setAvatar(URL.createObjectURL(e.target.files[0])) :\r\n        alert(\"Invalid Upload: Only Image Files Allowed.\");\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input id=\"avatar-input-ele\" type=\"file\" accept=\"image/*\" onChange={handleChange} ref={avatarInputEleRef} />\r\n            <img id=\"avatar\" src={avatar} alt=\"Avatar\" onDoubleClick={handleDoubleClick} onLoad={handleLoad} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Avatar;","function ElementMaker(props) {\r\n    const MutableTagType = props.mutableTagType;\r\n    const StaticTagType = props.staticTagType;\r\n    return (\r\n        <>\r\n            {\r\n                props.showInputEle ?\r\n                <MutableTagType \r\n                    type={props.type}\r\n                    placeholder={props.placeholder}\r\n                    className={props.name} \r\n                    name={props.name} \r\n                    value={props.text}\r\n                    onChange={props.handleEleChange} \r\n                    onBlur={props.handleEleBlur} \r\n                    autoFocus \r\n                /> :\r\n                <StaticTagType className={props.name} onDoubleClick={props.handleEleDoubleClick}>{props.text}</StaticTagType>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ElementMaker;","import { useState } from \"react\";\r\nimport faker from \"faker\";\r\nimport ElementMaker from \"./ElementMaker\";\r\n\r\nfunction NameAndJobTitle() {\r\n    const [fullName, setFullName] = useState({text: `${faker.name.firstName()} ${faker.name.lastName()}`, showInputEle: false});\r\n    const [jobTitle, setJobTitle] = useState({text: faker.name.jobTitle(), showInputEle: false});\r\n\r\n    return (\r\n        <div id=\"name-and-job-title-div\">\r\n            <ElementMaker name=\"fullName\"\r\n                mutableTagType=\"input\"\r\n                type=\"text\"\r\n                placeholder=\"Full Name\"\r\n                staticTagType=\"p\"\r\n                text={fullName.text}\r\n                handleEleDoubleClick={() => setFullName({...fullName, showInputEle: true})}\r\n                handleEleChange={e => setFullName({...fullName, text: e.target.value})}\r\n                handleEleBlur={() => setFullName({...fullName, showInputEle: false})}\r\n                showInputEle={fullName.showInputEle}\r\n            />\r\n            <ElementMaker name=\"jobTitle\"\r\n                mutableTagType=\"input\"\r\n                type=\"text\"\r\n                placeholder=\"Profession\"\r\n                staticTagType=\"p\"\r\n                text={jobTitle.text}\r\n                handleEleDoubleClick={() => setJobTitle({...jobTitle, showInputEle: true})}\r\n                handleEleChange={e => setJobTitle({...jobTitle, text: e.target.value})}\r\n                handleEleBlur={() => setJobTitle({...jobTitle, showInputEle: false})}\r\n                showInputEle={jobTitle.showInputEle}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NameAndJobTitle;","import Avatar from \"./Avatar\";\r\nimport NameAndJobTitle from \"./NameAndJobTitle\";\r\n\r\nfunction ID() {\r\n    return (\r\n        <section id=\"id-section\">\r\n            <Avatar />\r\n            <NameAndJobTitle />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ID;","import { useState } from \"react\";\r\nimport faker from \"faker\";\r\nimport ElementMaker from \"./ElementMaker\";\r\n\r\nfunction Profile() {\r\n    const [profile, setProfile] = useState({text: faker.lorem.sentences(7), showInputEle: false});\r\n    return (\r\n        <section id=\"profile-section\">\r\n            <header className=\"main-header\">Profile</header>\r\n            <ElementMaker name=\"profile\"\r\n                mutableTagType=\"textarea\"\r\n                placeholder=\"Professional Summary\"\r\n                staticTagType=\"p\"\r\n                text={profile.text}\r\n                handleEleDoubleClick={() => setProfile({...profile, showInputEle: true})}\r\n                handleEleChange={e => setProfile({...profile, text: e.target.value})}\r\n                handleEleBlur={() => setProfile({...profile, showInputEle: false})}\r\n                showInputEle={profile.showInputEle}\r\n            />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Profile;","import { useState } from \"react\";\r\nimport faker from \"faker\";\r\nimport ElementMaker from \"./ElementMaker\";\r\n\r\nfunction Achievement() {\r\n    const [myAchievement, setMyAchievement] = useState({text: faker.lorem.sentence(), showInputEle: false});\r\n    return (\r\n        <ElementMaker name=\"myAchievement\"\r\n            mutableTagType=\"input\"\r\n            type=\"text\"\r\n            placeholder=\"Your Achievement\"\r\n            staticTagType=\"li\"\r\n            text={myAchievement.text}\r\n            handleEleDoubleClick={() => setMyAchievement({...myAchievement, showInputEle: true})}\r\n            handleEleChange={e => setMyAchievement({...myAchievement, text: e.target.value})}\r\n            handleEleBlur={() => setMyAchievement({...myAchievement, showInputEle: false})}\r\n            showInputEle={myAchievement.showInputEle}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Achievement;","import { useState } from \"react\";\r\nimport faker from \"faker\";\r\nimport uniqid from \"uniqid\";\r\nimport ElementMaker from \"./ElementMaker\";\r\nimport Achievement from \"./Achievement\";\r\n\r\nfunction ExperienceInfo() {\r\n    const [specialty, setSpecialty] = useState({text: faker.name.jobType(), showInputEle: false});\r\n    const [myCompanyName, setMyCompanyName] = useState({text: faker.company.companyName(), showInputEle: false});\r\n    const [myCompanyCity, setMyCompanyCity] = useState({text: faker.address.city(), showInputEle: false});\r\n    const [startYear, setStartYear] = useState({text: 2012, showInputEle: false});\r\n    const [endYear, setEndYear] = useState({text: 2015, showInputEle: false});\r\n    const [myAchievements, setMyAchievements] = useState([<Achievement key={uniqid()} />, <Achievement key={uniqid()} />]);\r\n\r\n    const handleNumEleChange = e => {\r\n        const {name, value} = e.target;\r\n        if (Number(value) !== 0) {\r\n            switch (name) {\r\n                case \"startYear\": setStartYear({...startYear, text: value}); break;\r\n                case \"endYear\": setEndYear({...endYear, text: value}); break;\r\n                default: console.error(\"Issue with this element's name attribute\");\r\n            }\r\n        } else { alert(\"Invalid Input: Only Numbers Allowed.\") }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"specialty-div\">\r\n                <ElementMaker name=\"specialty\"\r\n                    mutableTagType=\"input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Job Title\"\r\n                    staticTagType=\"span\"\r\n                    text={specialty.text}\r\n                    handleEleDoubleClick={() => setSpecialty({...specialty, showInputEle: true})}\r\n                    handleEleChange={e => setSpecialty({...specialty, text: e.target.value})}\r\n                    handleEleBlur={() => setSpecialty({...specialty, showInputEle: false})}\r\n                    showInputEle={specialty.showInputEle}\r\n                />\r\n                <button className=\"header-btn\" onClick={() => setMyAchievements([...myAchievements, <Achievement key={uniqid()} />])}>\r\n                    Add Achievement\r\n                </button>\r\n            </div>\r\n            <p>\r\n                <ElementMaker name=\"myCompanyName\"\r\n                    mutableTagType=\"input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Employer\"\r\n                    staticTagType=\"span\"\r\n                    text={myCompanyName.text}\r\n                    handleEleDoubleClick={() => setMyCompanyName({...myCompanyName, showInputEle: true})}\r\n                    handleEleChange={e => setMyCompanyName({...myCompanyName, text: e.target.value})}\r\n                    handleEleBlur={() => setMyCompanyName({...myCompanyName, showInputEle: false})}\r\n                    showInputEle={myCompanyName.showInputEle}\r\n                />\r\n                <span>, </span>\r\n                <ElementMaker name=\"myCompanyCity\"\r\n                    mutableTagType=\"input\"\r\n                    type=\"text\"\r\n                    placeholder=\"City\"\r\n                    staticTagType=\"span\"\r\n                    text={myCompanyCity.text}\r\n                    handleEleDoubleClick={() => setMyCompanyCity({...myCompanyCity, showInputEle: true})}\r\n                    handleEleChange={e => setMyCompanyCity({...myCompanyCity, text: e.target.value})}\r\n                    handleEleBlur={() => setMyCompanyCity({...myCompanyCity, showInputEle: false})}\r\n                    showInputEle={myCompanyCity.showInputEle}\r\n                />\r\n            </p>\r\n            <p>\r\n                <em>\r\n                    <ElementMaker name=\"startYear\"\r\n                        mutableTagType=\"input\"\r\n                        type=\"number\"\r\n                        staticTagType=\"span\"\r\n                        text={startYear.text}\r\n                        handleEleDoubleClick={() => setStartYear({...startYear, showInputEle: true})}\r\n                        handleEleChange={handleNumEleChange}\r\n                        handleEleBlur={() => setStartYear({...startYear, showInputEle: false})}\r\n                        showInputEle={startYear.showInputEle}\r\n                    />\r\n                    <span> - </span>\r\n                    <ElementMaker name=\"endYear\"\r\n                        mutableTagType=\"input\"\r\n                        type=\"number\"\r\n                        staticTagType=\"span\"\r\n                        text={endYear.text}\r\n                        handleEleDoubleClick={() => setEndYear({...endYear, showInputEle: true})}\r\n                        handleEleChange={handleNumEleChange}\r\n                        handleEleBlur={() => setEndYear({...endYear, showInputEle: false})}\r\n                        showInputEle={endYear.showInputEle}\r\n                    />\r\n                </em>\r\n            </p>\r\n            <ul>{myAchievements}</ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExperienceInfo;","import { useState } from \"react\";\r\nimport uniqid from \"uniqid\";\r\nimport ExperienceInfo from \"./ExperienceInfo\";\r\n\r\nfunction Experience() {\r\n    const [experienceInfoArray, setExperienceInfoArray] = useState([<ExperienceInfo key={uniqid()} />]);\r\n    return (\r\n        <section id=\"experience-section\">\r\n            <header className=\"main-header\">\r\n                <span>Experience</span>\r\n                <button className=\"header-btn\" onClick={() => setExperienceInfoArray([...experienceInfoArray, <ExperienceInfo key={uniqid()} />])}>\r\n                    Add Experience\r\n                </button>\r\n            </header>\r\n            {experienceInfoArray}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Experience;","import { useState } from \"react\";\r\nimport uniqid from \"uniqid\";\r\nimport ElementMaker from \"./ElementMaker\";\r\nimport Achievement from \"./Achievement\";\r\n\r\nfunction Education() {\r\n    const [specialty, setSpecialty] = useState({text: \"Business Administration\", showInputEle: false});\r\n    const [mySchoolName, setMySchoolName] = useState({text: \"University of California\", showInputEle: false});\r\n    const [mySchoolCity, setMySchoolCity] = useState({text: \"Berkeley\", showInputEle: false});\r\n    const [startYear, setStartYear] = useState({text: 2008, showInputEle: false});\r\n    const [endYear, setEndYear] = useState({text: 2012, showInputEle: false});\r\n    const [myAchievements, setMyAchievements] = useState([<Achievement key={uniqid()} />, <Achievement key={uniqid()} />]);\r\n\r\n    const handleNumEleChange = e => {\r\n        const {name, value} = e.target;\r\n        if (Number(value) !== 0) {\r\n            switch (name) {\r\n                case \"startYear\": setStartYear({...startYear, text: value}); break;\r\n                case \"endYear\": setEndYear({...endYear, text: value}); break;\r\n                default: console.error(\"Issue with this element's name attribute\");\r\n            }\r\n        } else { alert(\"Invalid Input: Only Numbers Allowed.\") }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"specialty-div\">\r\n                <ElementMaker name=\"specialty\"\r\n                    mutableTagType=\"input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Degree\"\r\n                    staticTagType=\"span\"\r\n                    text={specialty.text}\r\n                    handleEleDoubleClick={() => setSpecialty({...specialty, showInputEle: true})}\r\n                    handleEleChange={e => setSpecialty({...specialty, text: e.target.value})}\r\n                    handleEleBlur={() => setSpecialty({...specialty, showInputEle: false})}\r\n                    showInputEle={specialty.showInputEle}\r\n                />\r\n                <button className=\"header-btn\" onClick={() => setMyAchievements([...myAchievements, <Achievement key={uniqid()} />])}>\r\n                    Add Achievement\r\n                </button>\r\n            </div>\r\n            <p>\r\n                <ElementMaker name=\"mySchoolName\"\r\n                    mutableTagType=\"input\"\r\n                    type=\"text\"\r\n                    placeholder=\"School/Institution\"\r\n                    staticTagType=\"span\"\r\n                    text={mySchoolName.text}\r\n                    handleEleDoubleClick={() => setMySchoolName({...mySchoolName, showInputEle: true})}\r\n                    handleEleChange={e => setMySchoolName({...mySchoolName, text: e.target.value})}\r\n                    handleEleBlur={() => setMySchoolName({...mySchoolName, showInputEle: false})}\r\n                    showInputEle={mySchoolName.showInputEle}\r\n                />\r\n                <span>, </span>\r\n                <ElementMaker name=\"mySchoolCity\"\r\n                    mutableTagType=\"input\"\r\n                    type=\"text\"\r\n                    placeholder=\"City\"\r\n                    staticTagType=\"span\"\r\n                    text={mySchoolCity.text}\r\n                    handleEleDoubleClick={() => setMySchoolCity({...mySchoolCity, showInputEle: true})}\r\n                    handleEleChange={e => setMySchoolCity({...mySchoolCity, text: e.target.value})}\r\n                    handleEleBlur={() => setMySchoolCity({...mySchoolCity, showInputEle: false})}\r\n                    showInputEle={mySchoolCity.showInputEle}\r\n                />\r\n            </p>\r\n            <p>\r\n                <em>\r\n                    <ElementMaker name=\"startYear\"\r\n                        mutableTagType=\"input\"\r\n                        type=\"number\"\r\n                        staticTagType=\"span\"\r\n                        text={startYear.text}\r\n                        handleEleDoubleClick={() => setStartYear({...startYear, showInputEle: true})}\r\n                        handleEleChange={handleNumEleChange}\r\n                        handleEleBlur={() => setStartYear({...startYear, showInputEle: false})}\r\n                        showInputEle={startYear.showInputEle}\r\n                    />\r\n                    <span> - </span>\r\n                    <ElementMaker name=\"endYear\"\r\n                        mutableTagType=\"input\"\r\n                        type=\"number\"\r\n                        staticTagType=\"span\"\r\n                        text={endYear.text}\r\n                        handleEleDoubleClick={() => setEndYear({...endYear, showInputEle: true})}\r\n                        handleEleChange={handleNumEleChange}\r\n                        handleEleBlur={() => setEndYear({...endYear, showInputEle: false})}\r\n                        showInputEle={endYear.showInputEle}\r\n                    />\r\n                </em>\r\n            </p>\r\n            <ul>{myAchievements}</ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Education;","import { useState } from \"react\";\r\nimport uniqid from \"uniqid\";\r\nimport EducationInfo from \"./EducationInfo\";\r\n\r\nfunction Education() {\r\n    const [educationInfoArray, setEducationInfoArray] = useState([<EducationInfo key={uniqid()} />]);\r\n    return (\r\n        <section id=\"education-section\">\r\n            <header className=\"main-header\">\r\n                <span>Education</span>\r\n                <button className=\"header-btn\" onClick={() => setEducationInfoArray([...educationInfoArray, <EducationInfo key={uniqid()} />])}>\r\n                    Add Education\r\n                </button>\r\n            </header>\r\n            {educationInfoArray}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Education;","import { useState } from \"react\";\r\nimport faker from \"faker\";\r\nimport ElementMaker from \"./ElementMaker\";\r\n\r\nfunction Email() {\r\n    const [myContactEmail, setMyContactEmail] = useState({text: faker.internet.email(), showInputEle: false});\r\n    return (\r\n        <div>\r\n            <p className=\"subHeader\">Email</p>\r\n            <ElementMaker name=\"myContactEmail\"\r\n                mutableTagType=\"input\"\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                staticTagType=\"p\"\r\n                text={myContactEmail.text}\r\n                handleEleDoubleClick={() => setMyContactEmail({...myContactEmail, showInputEle: true})}\r\n                handleEleChange={e => setMyContactEmail({...myContactEmail, text: e.target.value})}\r\n                handleEleBlur={() => setMyContactEmail({...myContactEmail, showInputEle: false})}\r\n                showInputEle={myContactEmail.showInputEle}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Email;","import { useState } from \"react\";\r\nimport faker from \"faker\";\r\nimport ElementMaker from \"./ElementMaker\";\r\n\r\nfunction Address() {\r\n    const [myContactStreetName, setMyContactStreetName] = useState({text: `73 ${faker.address.streetName()}`, showInputEle: false});\r\n    const [myContactCityName, setMyContactCityName] = useState({text: faker.address.cityName(), showInputEle: false});\r\n    const [myContactZipCode, setMyContactZipCode] = useState({text: faker.address.zipCode(), showInputEle: false});\r\n    const [myContactCountry, setMyContactCountry] = useState({text: faker.address.country(), showInputEle: false});\r\n\r\n    return (\r\n        <div>\r\n            <p className=\"subHeader\">Address</p>\r\n            <ElementMaker name=\"myContactStreetName\"\r\n                mutableTagType=\"input\"\r\n                type=\"text\"\r\n                placeholder=\"Street Name\"\r\n                staticTagType=\"p\"\r\n                text={myContactStreetName.text}\r\n                handleEleDoubleClick={() => setMyContactStreetName({...myContactStreetName, showInputEle: true})}\r\n                handleEleChange={e => setMyContactStreetName({...myContactStreetName, text: e.target.value})}\r\n                handleEleBlur={() => setMyContactStreetName({...myContactStreetName, showInputEle: false})}\r\n                showInputEle={myContactStreetName.showInputEle}\r\n            />\r\n            <p>\r\n                <ElementMaker name=\"myContactCityName\"\r\n                    mutableTagType=\"input\"\r\n                    type=\"text\"\r\n                    placeholder=\"City\"\r\n                    staticTagType=\"span\"\r\n                    text={myContactCityName.text}\r\n                    handleEleDoubleClick={() => setMyContactCityName({...myContactCityName, showInputEle: true})}\r\n                    handleEleChange={e => setMyContactCityName({...myContactCityName, text: e.target.value})}\r\n                    handleEleBlur={() => setMyContactCityName({...myContactCityName, showInputEle: false})}\r\n                    showInputEle={myContactCityName.showInputEle}\r\n                />\r\n                <span>, </span>\r\n                <ElementMaker name=\"myContactZipCode\"\r\n                    mutableTagType=\"input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Zip Code\"\r\n                    staticTagType=\"span\"\r\n                    text={myContactZipCode.text}\r\n                    handleEleDoubleClick={() => setMyContactZipCode({...myContactZipCode, showInputEle: true})}\r\n                    handleEleChange={e => setMyContactZipCode({...myContactZipCode, text: e.target.value})}\r\n                    handleEleBlur={() => setMyContactZipCode({...myContactZipCode, showInputEle: false})}\r\n                    showInputEle={myContactZipCode.showInputEle}\r\n                />\r\n            </p>\r\n            <ElementMaker name=\"myContactCountry\"\r\n                mutableTagType=\"input\"\r\n                type=\"text\"\r\n                placeholder=\"Country\"\r\n                staticTagType=\"p\"\r\n                text={myContactCountry.text}\r\n                handleEleDoubleClick={() => setMyContactCountry({...myContactCountry, showInputEle: true})}\r\n                handleEleChange={e => setMyContactCountry({...myContactCountry, text: e.target.value})}\r\n                handleEleBlur={() => setMyContactCountry({...myContactCountry, showInputEle: false})}\r\n                showInputEle={myContactCountry.showInputEle}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Address;","import { useState } from \"react\";\r\nimport faker from \"faker\";\r\nimport ElementMaker from \"./ElementMaker\";\r\n\r\nfunction Phone() {\r\n    const [myContactTel, setMyContactTel] = useState({text: faker.phone.phoneNumber(), showInputEle: false});\r\n    return (\r\n        <div>\r\n            <p className=\"subHeader\">Phone</p>\r\n            <ElementMaker name=\"myContactTel\"\r\n                mutableTagType=\"input\"\r\n                type=\"tel\"\r\n                placeholder=\"Phone\"\r\n                staticTagType=\"p\"\r\n                text={myContactTel.text}\r\n                handleEleDoubleClick={() => setMyContactTel({...myContactTel, showInputEle: true})}\r\n                handleEleChange={e => setMyContactTel({...myContactTel, text: e.target.value})}\r\n                handleEleBlur={() => setMyContactTel({...myContactTel, showInputEle: false})}\r\n                showInputEle={myContactTel.showInputEle}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Phone;","import { useState } from \"react\";\r\nimport ElementMaker from \"./ElementMaker\";\r\n\r\nfunction UntitledContact() {\r\n    const [subHeader, setSubHeader] = useState({text: \"Title\", showInputEle: false});\r\n    const [myCustomContactText, setMyCustomContactText] = useState({text: \"Contact Details\", showInputEle: false});\r\n    return (\r\n        <article>\r\n            <ElementMaker name=\"subHeader\"\r\n                mutableTagType=\"input\"\r\n                type=\"text\"\r\n                placeholder=\"Label\"\r\n                staticTagType=\"p\"\r\n                text={subHeader.text}\r\n                handleEleDoubleClick={() => setSubHeader({...subHeader, showInputEle: true})}\r\n                handleEleChange={e => setSubHeader({...subHeader, text: e.target.value})}\r\n                handleEleBlur={() => setSubHeader({...subHeader, showInputEle: false})}\r\n                showInputEle={subHeader.showInputEle}\r\n            />\r\n            <ElementMaker name=\"myCustomContactText\"\r\n                mutableTagType=\"input\"\r\n                type=\"text\"\r\n                placeholder=\"Link\"\r\n                staticTagType=\"p\"\r\n                text={myCustomContactText.text}\r\n                handleEleDoubleClick={() => setMyCustomContactText({...myCustomContactText, showInputEle: true})}\r\n                handleEleChange={e => setMyCustomContactText({...myCustomContactText, text: e.target.value})}\r\n                handleEleBlur={() => setMyCustomContactText({...myCustomContactText, showInputEle: false})}\r\n                showInputEle={myCustomContactText.showInputEle}\r\n            />\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default UntitledContact;","import { useState } from \"react\";\r\nimport uniqid from \"uniqid\";\r\nimport Email from \"./Email\";\r\nimport Address from \"./Address\";\r\nimport Phone from \"./Phone\";\r\nimport UntitledContact from \"./UntitledContact\";\r\n\r\nfunction Contact() {\r\n    const [myContacts, setMyContacts] = useState([<Email key={uniqid()} />, <Address key={uniqid()} />, <Phone key={uniqid()} />]);\r\n    return (\r\n        <section id=\"contact-section\">\r\n            <header className=\"aside-header\">\r\n                <span>Contact</span>\r\n                <button className=\"aside-btn\" onClick={() => setMyContacts([...myContacts, <UntitledContact key={uniqid()} />])}>\r\n                    Add More\r\n                </button>\r\n            </header>\r\n            {myContacts}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst labels = {\r\n  0.5: 'Unskilled',\r\n  1: 'Unskilled+',\r\n  1.5: 'Poor',\r\n  2: 'Poor+',\r\n  2.5: 'Ok',\r\n  3: 'Ok+',\r\n  3.5: 'Good',\r\n  4: 'Good+',\r\n  4.5: 'Excellent',\r\n  5: 'Excellent+',\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 200,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nconst StyledRating = withStyles({\r\n  iconFilled: {\r\n    color: '#ffffff',\r\n  }\r\n})(Rating);\r\n\r\nfunction HoverRating(props) {\r\n  const [value, setValue] = React.useState(props.defaultRating);\r\n  const [hover, setHover] = React.useState(-1);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root} onDoubleClick={props.handleRateDoubleClick} onBlur={props.handleRateBlur}>\r\n      <StyledRating\r\n        name=\"hover-feedback\"\r\n        value={value}\r\n        precision={0.5}\r\n        icon=\"▰\"\r\n        onChange={(event, newValue) => {\r\n          setValue(newValue);\r\n        }}\r\n        onChangeActive={(event, newHover) => {\r\n          setHover(newHover);\r\n        }}\r\n        readOnly={props.readOnly}\r\n      />\r\n      {value !== null && <Box ml={2}>{labels[hover !== -1 ? hover : value]}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HoverRating;","import { useState } from \"react\";\r\nimport HoverRating from \"./HoverRating\";\r\nimport ElementMaker from \"./ElementMaker\";\r\n\r\nfunction SkillInfo() {\r\n    const [mySkill, setMySkill] = useState({text: \"React\", showInputEle: false, readOnly: true});\r\n    return (\r\n        <article>\r\n            <ElementMaker name=\"mySkill\"\r\n                mutableTagType=\"input\"\r\n                type=\"text\"\r\n                placeholder=\"Skill\"\r\n                staticTagType=\"p\"\r\n                text={mySkill.text}\r\n                handleEleDoubleClick={() => setMySkill({...mySkill, showInputEle: true})}\r\n                handleEleChange={e => setMySkill({...mySkill, text: e.target.value})}\r\n                handleEleBlur={() => setMySkill({...mySkill, showInputEle: false})}\r\n                showInputEle={mySkill.showInputEle}\r\n            />\r\n            <HoverRating hoverName=\"mySkill\"\r\n                defaultRating={3.5} \r\n                readOnly={mySkill.readOnly} \r\n                handleRateDoubleClick={() => setMySkill({...mySkill, readOnly: false})}\r\n                handleRateBlur={() => setMySkill({...mySkill, readOnly: true})}\r\n            />\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default SkillInfo;","import { useState } from \"react\";\r\nimport uniqid from \"uniqid\";\r\nimport SkillInfo from \"./SkillInfo\";\r\n\r\nfunction Skills() {\r\n    const [mySkills, setMySkills] = useState([<SkillInfo key={uniqid()} />]);\r\n    return (\r\n        <section id=\"skills-section\">\r\n            <header className=\"aside-header\">\r\n                <span>Skills</span>\r\n                <button className=\"aside-btn\" onClick={() => setMySkills([...mySkills, <SkillInfo key={uniqid()} />])}>\r\n                    Add More\r\n                </button>\r\n            </header>\r\n            {mySkills}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Skills;","import { useState } from \"react\";\r\nimport HoverRating from \"./HoverRating\";\r\nimport ElementMaker from \"./ElementMaker\";\r\n\r\nfunction LanguageInfo() {\r\n    const [myLanguage, setMyLanguage] = useState({text: \"English\", showInputEle: false, readOnly: true})\r\n    return (\r\n        <article>\r\n            <ElementMaker name=\"myLanguage\"\r\n                mutableTagType=\"input\"\r\n                type=\"text\"\r\n                placeholder=\"Language\"\r\n                staticTagType=\"p\"\r\n                text={myLanguage.text}\r\n                handleEleDoubleClick={() => setMyLanguage({...myLanguage, showInputEle: true})}\r\n                handleEleChange={e => setMyLanguage({...myLanguage, text: e.target.value})}\r\n                handleEleBlur={() => setMyLanguage({...myLanguage, showInputEle: false})}\r\n                showInputEle={myLanguage.showInputEle}\r\n            />\r\n            <HoverRating hoverName=\"myLanguage\"\r\n                defaultRating={1.5} \r\n                readOnly={myLanguage.readOnly} \r\n                handleRateDoubleClick={() => setMyLanguage({...myLanguage, readOnly: false})}\r\n                handleRateBlur={() => setMyLanguage({...myLanguage, readOnly: true})}\r\n            />\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default LanguageInfo;","import { useState } from \"react\";\r\nimport uniqid from \"uniqid\";\r\nimport LanguageInfo from \"./LanguageInfo\";\r\n\r\nfunction Languages() {\r\n    const [myLanguages, setMyLanguages] = useState([<LanguageInfo key={uniqid()} />]);\r\n    return (\r\n        <section id=\"languages-section\">\r\n            <header className=\"aside-header\">\r\n                <span>Languages</span>\r\n                <button className=\"aside-btn\" onClick={() => setMyLanguages([...myLanguages, <LanguageInfo key={uniqid()} />])}>\r\n                    Add More\r\n                </button>\r\n            </header>\r\n            {myLanguages}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Languages;","import ID from \"./ID\";\r\nimport Profile from \"./Profile\";\r\nimport Experience from \"./Experience\";\r\nimport Education from \"./Education\";\r\nimport Contact from \"./Contact\";\r\nimport Skills from \"./Skills\";\r\nimport Languages from \"./Languages\";\r\n\r\nfunction CVPage() {\r\n    return (\r\n        <div id=\"cv-page-div\">\r\n            <main>\r\n                <ID />\r\n                <Profile />\r\n                <Experience />\r\n                <Education />\r\n            </main>\r\n            <aside>\r\n                <Contact />\r\n                <Skills />\r\n                <Languages />\r\n            </aside>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CVPage;","function OffPageButtons() {\r\n    return (\r\n        <div id=\"off-page-buttons-div\">\r\n            <button className=\"offPgBtn\" onClick={() => window.print()}>Generate PDF</button>\r\n            <form action=\"https://www.codesweetly.com/\" method=\"get\" target=\"_blank\">\r\n                <button type=\"submit\" className=\"offPgBtn\">Useful Articles</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OffPageButtons;","import AboutApp from \"./AboutApp\";\nimport CVPage from \"./CVPage\";\nimport OffPageButtons from \"./OffPageButtons\";\n\nfunction App() {\n  return (\n    <div id=\"app-sections\">\n      <AboutApp />\n      <CVPage />\n      <OffPageButtons />\n    </div>\n  )\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}